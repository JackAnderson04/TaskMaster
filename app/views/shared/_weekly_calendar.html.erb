<%
  today = Date.current
  
  #week navigation
  if params[:week].present?
    begin
      selected_week_start = Date.parse(params[:week]).beginning_of_week(:sunday)
    rescue Date::Error
      selected_week_start = today.beginning_of_week(:sunday)
    end
  else
    selected_week_start = today.beginning_of_week(:sunday)
  end
  
  start_of_week = selected_week_start
  end_of_week = selected_week_start.end_of_week(:sunday)
  week_days = (start_of_week..end_of_week).to_a
  time_slots = (0..23).map { |hour| "#{hour.to_s.rjust(2, '0')}:00" }  # Show all 24 hours
  
  prev_week_url = request.path + "?week=#{(start_of_week - 1.week).strftime('%Y-%m-%d')}" #adjust navigation URL
  next_week_url = request.path + "?week=#{(start_of_week + 1.week).strftime('%Y-%m-%d')}"
  today_url = request.path
%>

<div class="p-6">
  <!-- Calendar Header -->
  <div class="flex items-center justify-between mb-6">
    <div>
      <h2 class="text-2xl font-bold text-white">Weekly View</h2>
      <p class="text-gray-400 text-sm mt-1">
        <%= start_of_week.strftime("%B %d") %> - <%= end_of_week.strftime("%B %d, %Y") %>
      </p>
    </div>
    
    <!-- Week Navigation -->
    <div class="flex items-center space-x-2">
      <%= link_to "?week=#{(start_of_week - 1.week).strftime('%Y-%m-%d')}", 
          class: "p-2 hover:bg-gray-700 rounded-lg transition-colors" do %>
        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
      <% end %>
      
      <button class="px-3 py-1 text-sm bg-gray-700 hover:bg-gray-600 text-gray-200 rounded-lg transition-colors"
              onclick="window.location.href = '<%= request.path %>'">
        Today
      </button>
      
      <%= link_to "?week=#{(start_of_week + 1.week).strftime('%Y-%m-%d')}", 
          class: "p-2 hover:bg-gray-700 rounded-lg transition-colors" do %>
        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      <% end %>
    </div>
  </div>

  <!-- Calendar Grid -->
  <div class="overflow-x-auto max-h-[600px] overflow-y-auto">
    <div class="min-w-full">
      <!-- Days Header -->
      <div class="grid grid-cols-8 gap-px mb-4 sticky top-0 bg-gray-900 z-30 border-b border-gray-700 pb-2">
        <!-- Time column header -->
        <div class="text-center text-sm font-medium text-gray-400 py-3 bg-gray-900"></div>
        
        <!-- Day headers -->
        <% week_days.each do |date| %>
          <div class="text-center py-3 bg-gray-900 <%= 'bg-blue-600/20 rounded-lg' if date == today %>">
            <div class="text-sm font-medium text-gray-300">
              <%= date.strftime("%a") %>
            </div>
            <div class="text-lg font-bold <%= 'text-blue-400' if date == today %> <%= 'text-white' unless date == today %>">
              <%= date.day %>
            </div>
          </div>
        <% end %>
      </div>

      <!-- Time Grid -->
      <div class="relative">
        <% time_slots.each_with_index do |time_slot, slot_index| %>
          <div class="grid grid-cols-8 gap-px mb-px">
            <!-- Time Label -->
            <div class="text-right pr-4 py-4 text-sm text-gray-400 font-medium sticky left-0 bg-gray-900 z-20">
              <%= time_slot %>
            </div>
            
            <!-- Day Columns -->
            <% week_days.each_with_index do |date, day_index| %>
              <%
                #get events for this specific hour and date
                hour = time_slot.split(':')[0].to_i
                slot_start = date.beginning_of_day + hour.hours
                slot_end = slot_start + 1.hour
                
                #find events that overlap with this time slot
                day_events = events.select do |event|
                  event.start_time.to_date == date &&
                  event.start_time < slot_end &&
                  event.end_time > slot_start
                end
                
                #check if this is the first slot for multi-hour events
                first_slot_events = day_events.select do |event|
                  event.start_time >= slot_start && event.start_time < slot_end
                end
              %>
              
              <div class="relative min-h-[50px] border border-gray-700 hover:bg-gray-700/30 transition-colors group cursor-pointer"
                   data-date="<%= date.strftime('%Y-%m-%d') %>"
                   data-time="<%= hour %>">
                
                <!-- Events in this time slot (only show in first slot of event) -->
                <% first_slot_events.each_with_index do |event, event_index| %>
                  <%
                    #event height based on duration
                    event_duration_hours = ((event.end_time - event.start_time) / 1.hour).ceil
                    event_height = [event_duration_hours * 51, 51].max # 50px + 1px border, minimum 51px
                    
                    #width and position for multiple events in same slot
                    total_events = first_slot_events.count
                    event_width = total_events > 1 ? (100 / total_events) : 100
                    event_left = total_events > 1 ? (event_index * event_width) : 0
                  %>
                  <%= link_to event_path(event), 
                      class: "absolute top-1 z-10 p-2 rounded text-xs font-medium transition-all hover:shadow-lg overflow-hidden event-card
                             #{'bg-blue-500 text-white hover:bg-blue-600' if event.event_type == 'workout'}
                             #{'bg-green-500 text-white hover:bg-green-600' if event.event_type == 'meeting'}
                             #{'bg-purple-500 text-white hover:bg-purple-600' if event.event_type == 'personal'}
                             #{'bg-gray-600 text-white hover:bg-gray-700' if event.event_type == 'work'}
                             #{'bg-orange-500 text-white hover:bg-orange-600' if event.event_type == 'other'}",
                      style: "height: #{event_height}px; width: calc(#{event_width}% - 2px); left: calc(#{event_left}% + 2px); z-index: 15;",
                      onclick: "event.stopPropagation();" do %>
                    <div class="font-semibold truncate"><%= event.title %></div>
                    <div class="text-xs opacity-75">
                      <%= event.start_time.strftime("%I:%M") %>
                      <% if total_events == 1 %>
                        - <%= event.end_time.strftime("%I:%M %p") %>
                      <% end %>
                    </div>
                    <% if event.duration_in_hours > 1 && total_events == 1 %>
                      <div class="text-xs opacity-60">
                        <%= pluralize(event.duration_in_hours, 'hr') %>
                      </div>
                    <% end %>
                  <% end %>
                <% end %>
                
                <!-- Add event button (shows on hover only when no events or in empty space) -->
                <% if first_slot_events.empty? %>
                  <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none">
                    <div class="w-6 h-6 bg-blue-600 hover:bg-blue-700 text-white rounded-full flex items-center justify-center text-xs pointer-events-auto">
                      +
                    </div>
                  </div>
                <% else %>
                  <!-- Show + button in top right corner when there are existing events -->
                  <div class="absolute top-1 right-1 opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none z-25">
                    <div class="w-5 h-5 bg-blue-600 hover:bg-blue-700 text-white rounded-full flex items-center justify-center text-xs pointer-events-auto"
                         onclick="event.stopPropagation(); createEventAtTime('<%= date.strftime('%Y-%m-%d') %>', <%= hour %>);">
                      +
                    </div>
                  </div>
                <% end %>
              </div>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>
  </div>

  <!-- Current Time Indicator and JavaScript -->
  <% if start_of_week <= today && today <= end_of_week %>
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const now = new Date();
        const currentHour = now.getHours();
        const currentMinutes = now.getMinutes();
        
        const timeSlotIndex = currentHour;
        const minutePercentage = currentMinutes / 60;
        const topPosition = (timeSlotIndex + minutePercentage) * 51; // 50px height + 1px gap
        
        const currentTimeLine = document.createElement('div');
        currentTimeLine.className = 'absolute left-20 right-0 h-0.5 bg-red-500 z-25 pointer-events-none';
        currentTimeLine.style.top = topPosition + 140 + 'px'; // Account for header height
        
        const timeGrid = document.querySelector('.relative');
        if (timeGrid) {
          timeGrid.appendChild(currentTimeLine);
        }
        
        //event listeners for calendar cells, users are able to click anywhere to add an event more seamlessly
        document.querySelectorAll('[data-date][data-time]').forEach(cell => {
          cell.addEventListener('click', function(e) {
            //if the user clicks an event, we want to see details. if a user clicks +, create new overlapping event
            if (!e.target.closest('.event-card') && !e.target.closest('[onclick*="createEventAtTime"]')) {
              const date = this.getAttribute('data-date');
              const hour = this.getAttribute('data-time');
              createEventAtTime(date, hour);
            }
          });
        });
      });
      
      function createEventAtTime(date, hour) {
        const url = '<%= new_event_path %>' + '?date=' + date + '&time=' + hour;
        window.location.href = url;
      }
    </script>
  <% end %>
</div>